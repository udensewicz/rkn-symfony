<?php

namespace App\Controller;

use App\Entity\Picture;

use Symfony\Component\HttpFoundation\Response;
use Symfony\Component\Routing\Annotation\Route;
use Symfony\Bundle\FrameworkBundle\Controller\AbstractController;
//use Symfony\Bundle\FrameworkBundle\Controller\Controller;
use Symfony\Component\HttpFoundation\Request;
use Sensio\Bundle\FrameworkExtraBundle\Configuration\Method;
use Symfony\Component\HttpFoundation\File\UploadedFile;
use AppBundle\Form\FormValidationType;

use Symfony\Component\Form\Extension\Core\Type\TextType;
use Symfony\Component\Form\Extension\Core\Type\FileType;
use Symfony\Component\Form\Extension\Core\Type\SubmitType;
use Symfony\Component\Form\Extension\Core\Type\ChoiceType;


class PicturesController extends AbstractController
{

    /**
     * @Route("/pictures/new", name="new_pictures")
     * Method({"GET", "POST"})
     */
    public function newPicture(Request $request) {
        if (!$this->get('security.authorization_checker')->isGranted('ROLE_site_admin'))
            return $this->render('notallowed.html.twig');
        else {
            $picture = new Picture();
            $del = FALSE;
            $user = $this->getUser();
            $picture->setDeleted($del);
            $picture->setCreated(new \DateTime());
            $form = $this->createFormBuilder($picture)
                ->add('title', TextType::class, array('label' => 'Tytuł', 'attr' => array('class' => 'form-control')))
                ->add('picture', FileType::class, array('label' => 'Wstaw obraz (png, jpeg)', 'attr' => array('class' => 'form-control-file')))
                ->add('save', SubmitType::class, array(
                    'label' => 'Utwórz',
                    'attr' => array('class' => 'btn btn-primary mt-3')
                ))
                ->getForm();
            $form->handleRequest($request);
            if ($form->isSubmitted() && $form->isValid()) {
                $file = $form['picture']->getData();
                $pictureName = 'picture' . $this->generateUniqueFileName() . '.' . $file->guessExtension();
                $file->move($this->getParameter('pictures_directory'), $pictureName);
                $picture->setPicture($pictureName);
                $picture->setCreator($user);
                $entityManager = $this->getDoctrine()->getManager();
                $entityManager->persist($picture);
                $entityManager->flush();
                return $this->redirectToRoute('pictures_list');
            }
            return $this->render('addeditform.html.twig', array(
                'form' => $form->createView(),
                'title' => 'Nowy obrazek'
            ));
        }
    }

    /**
     * @Route("/pictures/{id}/edit", name="edit_pictures")
     * Method({"GET", "POST"})
     */
    public function editPicture(Request $request, $id) {
        if (!$this->get('security.authorization_checker')->isGranted('ROLE_site_admin'))
            return $this->render('notallowed.html.twig');
        else {
            $picture = $this->getDoctrine()->getRepository(Picture::class)->find($id);
            $form = $this->createFormBuilder($picture)
                ->add('title', TextType::class, array('label' => 'Tytuł', 'attr' => array('class' => 'form-control')))
                ->add('deleted', ChoiceType::class, array(
                    'expanded' => true,
                    'attr' => array('class' => 'form-check'),
                    'label' => 'Skasować?',
                    'choices' => array(
                        'Nie' => false,
                        'Tak' => true,
                    ),
                    'data' => false,
                ))
                ->add('save', SubmitType::class, array(
                    'label' => 'Zapisz',
                    'attr' => array('class' => 'btn btn-primary mt-3')
                ))
                ->getForm();
            $form->handleRequest($request);
            if ($form->isSubmitted() && $form->isValid()) {
                $entityManager = $this->getDoctrine()->getManager();
                $entityManager->flush();
                return $this->redirectToRoute('pictures_list');
            }
            return $this->render('addeditform.html.twig', array(
                'form' => $form->createView(),
                'title' => 'Edytuj obrazek'
            ));
        }
    }

    /**
     * @return string
     */
    private function generateUniqueFileName()
    {
        // md5() reduces the similarity of the file names generated by
        // uniqid(), which is based on timestamps
        return md5(uniqid());
    }


    /**
     * @Route("/pictures/list", name="pictures_list", methods="GET")
     */
    public function listPictures() {
        if (!$this->get('security.authorization_checker')->isGranted('ROLE_site_admin'))
            return $this->render('notallowed.html.twig');
        else {
            $pictures = $this->getDoctrine()->getRepository(Picture::class)
                ->findBy(
                    array('deleted' => 'false'),
                    array('created' => 'DESC')
                );

            return $this->render('pictures/list.html.twig', array('pictures' => $pictures));
        }
    }
}
